# Currently tested with Kubernetes 1.15 on Minikube version: v1.11.0
# This example uploads provided preliminary created custom certificates from ./secrets/nodes/, ./secrets/sgadmin/ and ./secrets/ingress_certificates/ folders
# and installs 3-nodes ES cluster (master,ingest and data nodes) with one Kibana node
# and exposes es.sg-helm.example.com and kibana.sg-helm.example.com on HTTPS.
# Please, note that the name of certificates should be the same as the name of the nodes in ES cluster.

# Run this example from search-guard-helm folder by `helm install -f examples/setup_custom_elasticsearch_certs/values.yaml sg-elk ./`
# To get access to Kibana:
#  - Run minikube tunnel in different window
#  - Get Kibana external IP by `kubectl get svc|grep LoadBalancer|awk '{print $4}'` and assign it to kibana.sg-helm.example.com in your etc/hosts file
#  - Access https://kibana.sg-helm.example.com with default user kibanaro and password extracted by this command `kubectl get secrets sg-elk-search-guard-helm-passwd-secret -o jsonpath="{.data.SG_KIBANARO_PWD}" | base64 -d`


common:
  #PKI aprroaches are specified with the following keys:
  #Set sgadmin_certificates_enabled if certificates are self-signed and generated by SG TLS tool
  sgadmin_certificates_enabled: false
  #Set ca_certificates_enabled to true if CA cert and key are copied to ../keys/ca/ folder and used by cluster to generate all certificates for nodes and services
  ca_certificates_enabled: false
  #Set external_ca_certificates_enabled to true if add all certificates for nodes and services to the folder ../keys/nodes/ to use them for encryption
  external_ca_certificates_enabled: true
  #Set external_ca_certificates_enabled to true if add single certificates for all nodes and services to the folder ../keys/sg-esnode/ to use it for encryption
  external_ca_single_certificate_enabled: false
  #Set directory where certificates are stored
  certificates_directory: "examples/setup_custom_elasticsearch_certs/secrets"

  ingressNginx:
    enabled: true
    #For ingressCertificates use "self-signed" if you want auto-generated with TLS tool self-signed certificates
    #For ingressCertificates use "external" if you have copied trusted certificates with the names tls.key and tls.pem to folders ../keys/ingress_certificates/elasticsearch/ and  ../keys/ingress_certificates/kibana/
    #ingressCertificates: "self-signed"
    ingressCertificates: "external"
    #ingressCertificates: "none"
    ingressKibanaDomain: "kibana.sg-helm.example.com"
    ingressElasticsearchDomain: "es.sg-helm.example.com"