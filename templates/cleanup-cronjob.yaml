{{- /*
  Copyright 2021 floragunn GmbH

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/}}

apiVersion: {{ template "searchguard.cronjob.apiVersion" . }}
kind: CronJob
metadata:
  name: "{{ template "searchguard.fullname" . }}-cleanup-job"
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "searchguard.fullname" . }}
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: {{ template "searchguard.fullname" . }}
spec:
  schedule: "*/5 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ template "searchguard.fullname" . }}
          {{ if .Values.common.docker_registry.enabled }}
          imagePullSecrets:
          - name: {{ .Values.common.docker_registry.imagePullSecret }}
          {{ end }}
          {{ if .Values.common.tolerations }}
          tolerations:
{{ toYaml .Values.common.tolerations | indent 10 }}
          {{ end }}
          containers:
            - name: "{{ template "searchguard.fullname" . }}-cleanup-job"
{{ include "searchguard.kubectl-image" . | indent 14 }}
              securityContext:
                runAsUser: 1000
                runAsGroup: 1000
                runAsNonRoot: true
                readOnlyRootFilesystem: true
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
              resources:
                limits:
                  cpu: 25m
                  memory: 64Mi
                requests:
                  cpu: 25m
                  memory: 64Mi
              imagePullPolicy: {{ .Values.common.pullPolicy }}
              command:
                - /bin/bash
                - -c
                - |

                    set -e

                    if [ "{{ .Values.common.debug_job_mode }}" = "true" ]; then
                      echo "Debug mode is on, will not delete any jobs"
                    else

                      echo "Debug mode is off, will delete succeeded jobs"

                      SUCCEEDED_JOBS=$(kubectl get job -n {{ .Release.Namespace }} -o=jsonpath='{.items[?(@.status.succeeded==1)].metadata.name}')

                      if [ "$SUCCEEDED_JOBS" != "" ]; then
                        kubectl delete job $SUCCEEDED_JOBS -n {{ .Release.Namespace }}
                      fi
                    fi
          restartPolicy: Never
      backoffLimit: 1