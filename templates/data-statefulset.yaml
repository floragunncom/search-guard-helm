{{- /*
    Includes code from the following Apache 2 licensed projects:

      - https://github.com/lalamove/helm-elasticsearch

        Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "searchguard.fullname" . }}-data
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "searchguard.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: {{ template "searchguard.fullname" . }}
    role: data
    estype: node
spec:
  serviceName: {{ template "searchguard.fullname" . }}-data
  replicas: {{ .Values.data.replicas }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      component: {{ template "searchguard.fullname" . }}
      role: data
  template:
    metadata:
      labels:
        release: "{{ .Release.Name }}"
        app: {{ template "searchguard.fullname" . }}
        component: {{ template "searchguard.fullname" . }}
        role: data
        {{- if .Values.data.labels }}
{{ toYaml .Values.data.labels | indent 8 }}
        {{- end }}
      annotations:
        {{ if .Values.common.restart_pods_on_config_change }}
        checksum/config: {{ include (print $.Template.BasePath "/sg-static-configuration.yaml") . | sha256sum }}
        {{ end }}
      {{- if .Values.data.annotations }}
{{ toYaml .Values.data.annotations | indent 8 }}
      {{- end }}
    spec:
      subdomain: {{ template "searchguard.fullname" . }}
      serviceAccountName: {{ template "searchguard.fullname" . }}
      securityContext:
        fsGroup: 1000
      {{- if eq .Values.data.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "searchguard.fullname" . }}
                  role: data
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "topology.kubernetes.io/zone"
              labelSelector:
                matchLabels:
                  component: {{ template "searchguard.fullname" . }}
                  role: data
      {{- else if eq .Values.data.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "topology.kubernetes.io/zone"
              labelSelector:
                matchLabels:
                  component: {{ template "searchguard.fullname" . }}
                  role: data
          - weight: 2
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "searchguard.fullname" . }}
                  role: data
      {{- end }}
      initContainers:
{{ include "searchguard.init-containers" . | indent 6 }}
      {{ if .Values.common.docker_registry.enabled }}
      imagePullSecrets:
      - name: {{ .Values.common.docker_registry.imagePullSecret }}
      {{ end }}
      containers:
      - name: elasticsearch
      {{ if .Values.common.xpack_basic }}
        image: "{{ .Values.common.images.repository }}/{{ .Values.common.images.provider }}/{{ .Values.common.images.elasticsearch_base_image }}:{{ .Values.common.elkversion }}-{{ .Values.common.sgversion }}"
      {{ else }}
        image: "{{ .Values.common.images.repository }}/{{ .Values.common.images.provider }}/{{ .Values.common.images.elasticsearch_base_image }}:{{ .Values.common.elkversion }}-oss-{{ .Values.common.sgversion }}"
      {{ end }}
        imagePullPolicy: {{ .Values.common.pullPolicy }}
        lifecycle:
          postStart:
{{ include "searchguard.remove-demo-certs" . | indent 12 }}
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        envFrom:
        - secretRef:
            name: {{ template "searchguard.fullname" . }}-passwd-secret
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: {{ template "searchguard.fullname" . }}-discovery.{{ .Release.Namespace }}.svc
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms{{ .Values.data.heapSize }} -Xmx{{ .Values.data.heapSize }}"
        - name: NODE_DATA
          value: "true"
        - name: NODE_MASTER
          value: "false"
        - name: NODE_INGEST
          value: "false"
        - name: PROCESSORS
          value: "{{ .Values.data.processors }}"
        {{- range $key, $value :=  .Values.common.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value :=  .Values.data.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        - containerPort: 9200
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /_searchguard/health
            port: http
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 30
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 60
          periodSeconds: 10
        resources:
{{ toYaml .Values.data.resources | indent 10 }}
        volumeMounts:
        - mountPath: /storage/
          name: storage
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
        - mountPath: /usr/share/elasticsearch/plugins/search-guard-flx/sgconfig/
          name: searchguard-config
        - name: secret-volume
          readOnly: true
          mountPath: "/usr/share/elasticsearch/config/certificates-secrets"
        - name: kubectl
          subPath: kubectl
          mountPath: /usr/local/bin/kubectl
          readOnly: true
      volumes:
        - name: secret-volume
          secret:
            secretName: {{ template "searchguard.fullname" . }}-nodes-cert-secret
            defaultMode: 0644
        - configMap:
            name: {{ template "searchguard.fullname" . }}-config
          name: config
        - configMap:
            name: {{ template "searchguard.fullname" . }}-sg-dynamic-configuration
          name: searchguard-config
        - name: kubectl
          emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.data.storageClass }}
      resources:
        requests:
          storage: {{ .Values.data.storage }}
