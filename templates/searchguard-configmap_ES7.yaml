{{- /*
    Copyright 2021 floragunn GmbH

    Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "searchguard.fullname" . }}-searchguard-config-7
  labels:
    app: {{ template "searchguard.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  sg_config.yml: |-
    _sg_meta:
      type: "config"
      config_version: 2
    sg_config:
      dynamic:
        do_not_fail_on_forbidden: {{ .Values.common.do_not_fail_on_forbidden }}
{{ if not (eq .Values.common.license "none") }}
        license: {{ .Values.common.license }}
{{ end }}
        kibana:
          multitenancy_enabled: true
          server_username: kibanaserver
          index: '.kibana'
        authc:
          basic_internal_auth_domain: 
            http_enabled: true
            transport_enabled: false
            order: 0
            http_authenticator:
              type: basic
              challenge: true
            authentication_backend:
              type: intern
          
  sg_roles.yml: |-
    _sg_meta:
      type: "roles"
      config_version: 2

    # Define your own search guard roles here
    # or use the built-in search guard roles
    # See https://docs.search-guard.com/latest/roles-permissions
{{ if .Values.common.roles }}
{{ toYaml .Values.common.roles | indent 4 }}
{{ end }}
  sg_roles_mapping.yml: |-
    _sg_meta:
      type: "rolesmapping"
      config_version: 2

    # Define your roles mapping here
    # See https://docs.search-guard.com/latest/mapping-users-roles

    ## Demo roles mapping

    SGS_ALL_ACCESS:
      reserved: true
      backend_roles:
      - "admin"
      description: "Maps admin to SGS_ALL_ACCESS"

    SGS_KIBANA_USER:
      reserved: false
      backend_roles:
      - "kibanauser"
      description: "Maps kibanauser to SGS_KIBANA_USER"

    SGS_READALL:
      reserved: true
      backend_roles:
      - "readall"

    SGS_KIBANA_SERVER:
      reserved: true
      users:
      - "kibanaserver"
{{ if .Values.common.rolesmapping }}
{{ toYaml .Values.common.rolesmapping | indent 4 }}
{{ end }}

  sg_internal_users.yml: |-

    _sg_meta:
      type: "internalusers"
      config_version: 2
    # This is the internal user database

    admin:
      reserved: true
      # Do not change the hash here!
      # It will be automatically replaced by auto generated password
      hash: ${envbc.SG_ADMIN_PWD}
      backend_roles:
        - admin
 
    kibanaserver:
      reserved: true
      # Do not change the hash here!
      # It will be automatically replaced by auto generated password
      hash: ${envbc.SG_KIBANASERVER_PWD}

    kibanaro: 
      reserved: true
      # Do not change the hash here!
      # It will be automatically replaced by auto generated password
      hash: ${envbc.SG_KIBANARO_PWD}
      backend_roles:
        - kibanauser
        - readall
{{ if .Values.common.users }}
{{ toYaml .Values.common.users | indent 4 }}
{{ end }}
  sg_action_groups.yml: |-
    _sg_meta:
      type: "actiongroups"
      config_version: 2

    # Define your own action groups here
    # or use the built-in groups
    # See https://docs.search-guard.com/latest/action-groups

  sg_tenants.yml: |-
    _sg_meta:
      type: "tenants"
      config_version: 2

    # Define your tenants here
    # See https://docs.search-guard.com/latest/kibana-multi-tenancy